[{"E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\index.js":"1","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\routes.js":"2","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\App.js":"3","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\user\\signup.js":"4","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\contact\\contacts.js":"5","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\user\\privateRoute.js":"6","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\user\\signin.js":"7","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\conversation\\conversations.js":"8","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\user\\backendManager\\index.js":"9","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\contact\\backendManager\\contactApiCalls.js":"10","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\conversation\\backendManager\\conversationApiCalls.js":"11","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\backend.js":"12","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\contact\\createContact.js":"13","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\user\\updateProfile.js":"14"},{"size":202,"mtime":1608904641799,"results":"15","hashOfConfig":"16"},{"size":1137,"mtime":1609411178912,"results":"17","hashOfConfig":"16"},{"size":121,"mtime":1608902448123,"results":"18","hashOfConfig":"16"},{"size":3712,"mtime":1609410779800,"results":"19","hashOfConfig":"16"},{"size":3995,"mtime":1609409521191,"results":"20","hashOfConfig":"16"},{"size":568,"mtime":1608977693717,"results":"21","hashOfConfig":"16"},{"size":3463,"mtime":1609411266087,"results":"22","hashOfConfig":"16"},{"size":5269,"mtime":1609410291095,"results":"23","hashOfConfig":"16"},{"size":2422,"mtime":1609407881318,"results":"24","hashOfConfig":"16"},{"size":1319,"mtime":1609409483236,"results":"25","hashOfConfig":"16"},{"size":2094,"mtime":1609308981519,"results":"26","hashOfConfig":"16"},{"size":74,"mtime":1608963572629,"results":"27","hashOfConfig":"16"},{"size":3641,"mtime":1609409616284,"results":"28","hashOfConfig":"16"},{"size":3421,"mtime":1609410885953,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1aotwb2",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},"E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\index.js",["65"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport App from \"./App\";\nimport Routes from \"./routes\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n",["66","67"],"E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\routes.js",[],"E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\App.js",[],"E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\user\\signup.js",[],"E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\contact\\contacts.js",["68","69","70"],"import React, { useEffect, useState } from \"react\";\r\nimport { deleteContact, getContacts } from \"./backendManager/contactApiCalls\";\r\nimport { deleteUser, isSignedIn, signout } from \"../user/backendManager/index\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Conversations from \"../conversation/conversations\";\r\n\r\nimport \"./contact.css\";\r\n\r\nconst Contacts = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const { user, token } = isSignedIn();\r\n\r\n  let chatContainer = document.getElementById(\"chatContainer\");\r\n  let sendContainer = document.getElementById(\"sendContainer\");\r\n\r\n  const preload = () => {\r\n    getContacts(user._id, token).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setContacts(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    chatContainer.innerText = \"\";\r\n    chatContainer.innerHTMLs = \"\";\r\n\r\n    sendContainer.style.display = \"none\";\r\n  }, []);\r\n\r\n  const deleteContactHelper = (event) => {\r\n    event.preventDefault();\r\n    const petNameParent = event.target.parentElement;\r\n    const petName = petNameParent.childNodes;\r\n\r\n    const confirm = prompt(\"Are you sure? [YES/NO]\");\r\n\r\n    if (confirm === \"YES\") {\r\n      deleteContact(user._id, token, petName[0].innerText).then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          preload();\r\n        }\r\n      });\r\n    } else {\r\n      alert(\"Action terminated\");\r\n    }\r\n  };\r\n\r\n  const deleteMeHelper = (event) => {\r\n    event.preventDefault();\r\n\r\n    const confirm = prompt(\"Are you sure? [YES/NO]\");\r\n\r\n    if (confirm === \"YES\") {\r\n      deleteUser(user._id, token).then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          signout();\r\n          return <Redirect to=\"/signup\" />;\r\n        }\r\n      });\r\n    } else {\r\n      alert(\"Action terminated\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"actionButtons\">\r\n        <span\r\n          onClick={() => {\r\n            signout();\r\n          }}\r\n        >\r\n          <Link to=\"/signin\">\r\n            <button className=\"button\">Sign Out</button>\r\n          </Link>\r\n        </span>\r\n        <Link to=\"/updateProfile\">\r\n          <span>\r\n            <button className=\"button\">Update profile</button>\r\n          </span>\r\n        </Link>\r\n        <span onClick={deleteMeHelper}>\r\n          <button className=\"button\">Delete Account</button>\r\n        </span>\r\n      </div>\r\n      <div className=\"adjust\" style={{ margin: \"50px auto\" }}>\r\n        <div>\r\n          <h1>Contacts</h1>\r\n          <h3>All your contacts appear here</h3>\r\n        </div>\r\n        {contacts.map((contact, index) => {\r\n          return (\r\n            <div key={index} className=\"contactLine\">\r\n              <span>{contact.petName}</span>\r\n              <Link to={`/conversation/${contact.actualUser}`}>\r\n                <span>\r\n                  <button\r\n                    className=\"button\"\r\n                    style={{\r\n                      backgroundColor: \"#5252d3\",\r\n                    }}\r\n                    onClick={() => {\r\n                      chatContainer.style.display = \"none\";\r\n\r\n                      sendContainer.style.display = \"none\";\r\n                    }}\r\n                  >\r\n                    Chat\r\n                  </button>\r\n                </span>\r\n              </Link>\r\n              <button\r\n                onClick={deleteContactHelper}\r\n                className=\"button\"\r\n                style={{\r\n                  backgroundColor: \"#5252d3\",\r\n                }}\r\n              >\r\n                Delete Contact\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n        <Link to=\"/createContact\">\r\n          <button className=\"button\">Create new contact</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\user\\privateRoute.js",[],"E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\user\\signin.js",[],"E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\conversation\\conversations.js",["71","72","73","74","75"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { isSignedIn } from \"../user/backendManager\";\r\nimport {\r\n  deleteChat,\r\n  getContactName,\r\n  getConversation,\r\n  initiateConversation,\r\n  startChating,\r\n} from \"./backendManager/conversationApiCalls\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport \"./conversation.css\";\r\n\r\nconst audio = new Audio(\"ding.mp3\");\r\n\r\nconst Conversations = ({ match }) => {\r\n  const [conversation, setConversation] = useState([]);\r\n\r\n  const { user, token } = isSignedIn();\r\n\r\n  const ENDPOINT = \"localhost:9000\";\r\n  let socket;\r\n\r\n  let chatPage = document.getElementsByClassName(\"chatPage\");\r\n  let chatContainer = document.getElementById(\"chatContainer\");\r\n  let sendContainer = document.getElementById(\"sendContainer\");\r\n  let msg = document.getElementById(\"msg\");\r\n  let thiss = \"THIS\";\r\n\r\n  // Socket IO client connections\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n\r\n    socket.emit(\"joined\", user._id);\r\n\r\n    return () => {\r\n      socket.off();\r\n    };\r\n  }, [ENDPOINT]);\r\n\r\n  // Socket IO Real time chating implementation\r\n  useEffect(() => {\r\n    chatPage[0].style.display = \"block\";\r\n    sendContainer.style.display = \"block\";\r\n\r\n    sendContainer.addEventListener(\"submit\", (event) => {\r\n      event.preventDefault();\r\n\r\n      if (msg.value) {\r\n        let message = document.createElement(\"div\");\r\n        message.classList.add(\"right\");\r\n        message.classList.add(\"message\");\r\n        message.innerText = msg.value;\r\n        chatContainer.appendChild(message);\r\n\r\n        chatingPreload(match.params.actualUser, msg.value);\r\n\r\n        socket.emit(\"sendMessage\", {\r\n          messageBody: msg.value,\r\n          to: match.params.actualUser,\r\n        });\r\n      }\r\n\r\n      msg.value = \"\";\r\n    });\r\n\r\n    socket.on(\"recieveMessage\", (messageBody) => {\r\n      console.log(\"message recieved at client\", messageBody);\r\n\r\n      audio.play();\r\n\r\n      let message = document.createElement(\"div\");\r\n      message.classList.add(\"left\");\r\n      message.classList.add(\"message\");\r\n      message.innerText = messageBody;\r\n\r\n      chatContainer.appendChild(message);\r\n    });\r\n  }, [thiss]);\r\n\r\n  const initiateConversationHelper = (actualUser) => {\r\n    initiateConversation(user._id, token, actualUser).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        document.getElementById(\"ichat\").style.display = \"none\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteChatHelper = () => {\r\n    let confirm = prompt(\"Are you sure? [YES/NO]\");\r\n\r\n    if (confirm) {\r\n      deleteChat(user._id, token, match.params.actualUser).then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          chatingPreload(\r\n            match.params.actualUser,\r\n            \"Previous conversations are deleted\"\r\n          );\r\n\r\n          let message = document.createElement(\"div\");\r\n          message.classList.add(\"right\");\r\n          message.classList.add(\"message\");\r\n          message.innerText =\r\n            \"Previous conversations are deleted! Refresh to see changes\";\r\n\r\n          chatContainer.appendChild(message);\r\n        }\r\n      });\r\n    } else {\r\n      alert(\"Action terminated\");\r\n    }\r\n  };\r\n\r\n  const preload = (actualUser) => {\r\n    getConversation(user._id, token, actualUser).then((data) => {\r\n      if (data.error) {\r\n        let initiateChatButton = document.createElement(\"button\");\r\n        initiateChatButton.id = \"ichat\";\r\n        initiateChatButton.innerText = \"Initiate Chat\";\r\n        initiateChatButton.onclick = initiateConversationHelper(actualUser);\r\n\r\n        chatContainer.appendChild(initiateChatButton);\r\n        console.log(data.error);\r\n      } else {\r\n        setConversation(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload(match.params.actualUser);\r\n  }, []);\r\n\r\n  const chatingPreload = (actualUser, messageBody) => {\r\n    startChating(user._id, token, actualUser, messageBody).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"actionButtons\">\r\n        <Link to=\"/contacts\">\r\n          <button\r\n            onClick={() => {\r\n              chatContainer.innerText = \"\";\r\n              chatContainer.innerHTMLs = \"\";\r\n              chatContainer.style.display = \"none\";\r\n\r\n              sendContainer.style.display = \"none\";\r\n            }}\r\n            className=\"button\"\r\n          >\r\n            Back\r\n          </button>\r\n        </Link>\r\n        <button onClick={deleteChatHelper} className=\"button\">\r\n          Delete Chat\r\n        </button>\r\n      </div>\r\n      <div className=\"chatPage\">\r\n        <div id=\"chatContainer\">\r\n          {conversation &&\r\n            conversation.map((message, index) => {\r\n              let className = message.from === user._id ? \"right\" : \"left\";\r\n              className += \" message\";\r\n              return (\r\n                <div key={index} className={className}>\r\n                  {message.messageBody}\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n        <p className=\"previous\">PREVIOUS CHATS</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conversations;\r\n","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\user\\backendManager\\index.js",[],"E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\contact\\backendManager\\contactApiCalls.js",[],"E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\conversation\\backendManager\\conversationApiCalls.js",[],"E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\backend.js",[],["76","77"],"E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\contact\\createContact.js",["78"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isSignedIn } from \"../user/backendManager\";\r\nimport { createContact } from \"./backendManager/contactApiCalls\";\r\n\r\nimport \"./contact.css\";\r\n\r\nconst CreateContact = () => {\r\n  const [contactDetail, setContactDetail] = useState({\r\n    petname: \"\",\r\n    actualUsername: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const { user, token } = isSignedIn();\r\n  const { petname, actualUsername } = contactDetail;\r\n\r\n  let chatContainer = document.getElementById(\"chatContainer\");\r\n  let sendContainer = document.getElementById(\"sendContainer\");\r\n\r\n  useEffect(() => {\r\n    chatContainer.style.display = \"none\";\r\n    sendContainer.style.display = \"none\";\r\n  }, []);\r\n\r\n  const changeHandler = (property) => (event) => {\r\n    setContactDetail({ ...contactDetail, [property]: event.target.value });\r\n  };\r\n\r\n  const createContactHelper = (event) => {\r\n    event.preventDefault();\r\n    createContact(user._id, token, petname, actualUsername).then((data) => {\r\n      if (data.error) {\r\n        setSuccess(\"\");\r\n        setError(data.error);\r\n      } else {\r\n        setError(\"\");\r\n        setSuccess(data);\r\n        setContactDetail({ petname: \"\", actualUsername: \"\" });\r\n      }\r\n    });\r\n  };\r\n\r\n  const successMessage = () => {\r\n    return (\r\n      <div style={{ backgroundColor: \"#16e516\", padding: \"10px, 0px\" }}>\r\n        <p\r\n          style={{\r\n            display: success ? \"\" : \"none\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Contact saved successfully\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div style={{ backgroundColor: \"#ff3d3d\", padding: \"10px, 0px\" }}>\r\n        <p\r\n          style={{\r\n            display: error ? \"\" : \"none\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          {error}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const createContactForm = () => {\r\n    return (\r\n      <div className=\"outerForm\">\r\n        <div className=\"adjust\">\r\n          <div>\r\n            <h1>Contacts</h1>\r\n            <h3>Add new contact</h3>\r\n          </div>\r\n          <form autoComplete=\"off\" className=\"authForm\">\r\n            <label for=\"petname\">Pet-Name</label>\r\n            <input\r\n              id=\"petname\"\r\n              className=\"formInput\"\r\n              placeholder=\"Name you want to save with\"\r\n              value={petname}\r\n              onChange={changeHandler(\"petname\")}\r\n              autoFocus\r\n            />\r\n            <label for=\"actualusername\">Actual Username</label>\r\n            <input\r\n              id=\"actualusername\"\r\n              className=\"formInput\"\r\n              placeholder=\"Actual username of contact\"\r\n              value={actualUsername}\r\n              onChange={changeHandler(\"actualUsername\")}\r\n            />\r\n\r\n            <div>\r\n              <button\r\n                onClick={createContactHelper}\r\n                className=\"button\"\r\n                style={{ margin: \"50px 40px\" }}\r\n              >\r\n                Add to contacts\r\n              </button>\r\n              <Link to=\"/contacts\">\r\n                <button className=\"button\" style={{ margin: \"50px 40px\" }}>\r\n                  Back\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {successMessage()}\r\n        {errorMessage()}\r\n        {createContactForm()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateContact;\r\n","E:\\HP\\Documents\\DEVELOPMENT\\JS Projects\\Chat Arc\\ChatArc Frontend\\Socket IO Client\\src\\user\\updateProfile.js",["79"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isSignedIn, updateUser } from \"./backendManager\";\r\n\r\nconst UpdateMe = () => {\r\n  const [userDetails, setUserDetails] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const { username, email, password } = userDetails;\r\n  const { user, token } = isSignedIn();\r\n\r\n  const initiate = () => {\r\n    setUserDetails({ username: user.username, email: user.email });\r\n  };\r\n\r\n  useEffect(() => {\r\n    initiate();\r\n  }, []);\r\n\r\n  const handleChanges = (property) => (event) => {\r\n    setUserDetails({ ...userDetails, [property]: event.target.value });\r\n  };\r\n\r\n  const updateMeHelper = () => {\r\n    updateUser(user._id, token, username, email, password).then((data) => {\r\n      if (data.error) {\r\n        setError(data.error);\r\n        setSuccess(false);\r\n      } else {\r\n        setError(\"\");\r\n        setSuccess(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const successMessage = () => {\r\n    return (\r\n      <div style={{ backgroundColor: \"#16e516\", padding: \"10px, 0px\" }}>\r\n        <p style={{ display: success ? \"\" : \"none\", textAlign: \"center\" }}>\r\n          Your profile information is updated successfully!\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div style={{ backgroundColor: \"#ff3d3d\", padding: \"10px, 0px\" }}>\r\n        <p style={{ display: error ? \"\" : \"none\", textAlign: \"center\" }}>\r\n          {error}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const updateMeForm = () => {\r\n    return (\r\n      <div className=\"outerForm\">\r\n        <div className=\"adjust\">\r\n          <div>\r\n            <h1>Update Profile</h1>\r\n          </div>\r\n          <form autoComplete=\"off\" className=\"authForm\">\r\n            <label for=\"username\"></label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              className=\"formInput\"\r\n              placeholder=\"Choose a username\"\r\n              value={username}\r\n              onChange={handleChanges(\"username\")}\r\n              autoFocus\r\n            />\r\n            <label for=\"email\"></label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              className=\"formInput\"\r\n              placeholder=\"Give your email\"\r\n              value={email}\r\n              onChange={handleChanges(\"email\")}\r\n            />\r\n            <label for=\"password\"></label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"formInput\"\r\n              placeholder=\"New Password\"\r\n              value={password}\r\n              onChange={handleChanges(\"password\")}\r\n            />\r\n          </form>\r\n          <div>\r\n            <button\r\n              className=\"button\"\r\n              onClick={updateMeHelper}\r\n              style={{ margin: \"50px 40px\" }}\r\n            >\r\n              Update\r\n            </button>\r\n            <Link to=\"/contacts\">\r\n              <button className=\"button\" style={{ margin: \"50px 40px\" }}>\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      {errorMessage()}\r\n      {successMessage()}\r\n      {updateMeForm()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateMe;\r\n",{"ruleId":"80","severity":1,"message":"81","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":11},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"80","severity":1,"message":"88","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":29,"column":6,"nodeType":"91","endLine":29,"endColumn":8,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":36,"column":6,"nodeType":"91","endLine":36,"endColumn":8,"suggestions":"94"},{"ruleId":"80","severity":1,"message":"95","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":24},{"ruleId":"80","severity":1,"message":"96","line":6,"column":3,"nodeType":"82","messageId":"83","endLine":6,"endColumn":17},{"ruleId":"89","severity":1,"message":"97","line":33,"column":14,"nodeType":"98","endLine":33,"endColumn":26},{"ruleId":"89","severity":1,"message":"99","line":80,"column":6,"nodeType":"91","endLine":80,"endColumn":13,"suggestions":"100"},{"ruleId":"89","severity":1,"message":"101","line":137,"column":6,"nodeType":"91","endLine":137,"endColumn":8,"suggestions":"102"},{"ruleId":"84","replacedBy":"103"},{"ruleId":"86","replacedBy":"104"},{"ruleId":"89","severity":1,"message":"105","line":25,"column":6,"nodeType":"91","endLine":25,"endColumn":8,"suggestions":"106"},{"ruleId":"89","severity":1,"message":"107","line":24,"column":6,"nodeType":"91","endLine":24,"endColumn":8,"suggestions":"108"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"'Conversations' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has missing dependencies: 'chatContainer' and 'sendContainer.style'. Either include them or remove the dependency array.",["112"],"'Redirect' is defined but never used.","'getContactName' is defined but never used.","Assignments to the 'socket' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has missing dependencies: 'chatContainer', 'chatPage', 'chatingPreload', 'match.params.actualUser', 'msg', 'sendContainer', and 'socket'. Either include them or remove the dependency array.",["113"],"React Hook useEffect has missing dependencies: 'match.params.actualUser' and 'preload'. Either include them or remove the dependency array.",["114"],["109"],["110"],"React Hook useEffect has missing dependencies: 'chatContainer.style' and 'sendContainer.style'. Either include them or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'initiate'. Either include it or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [preload]",{"range":"129","text":"130"},"Update the dependencies array to be: [chatContainer, sendContainer.style]",{"range":"131","text":"132"},"Update the dependencies array to be: [chatContainer, chatPage, chatingPreload, match.params.actualUser, msg, sendContainer, socket, thiss]",{"range":"133","text":"134"},"Update the dependencies array to be: [match.params.actualUser, preload]",{"range":"135","text":"136"},"Update the dependencies array to be: [chatContainer.style, sendContainer.style]",{"range":"137","text":"138"},"Update the dependencies array to be: [initiate]",{"range":"139","text":"140"},[856,858],"[preload]",[1006,1008],"[chatContainer, sendContainer.style]",[2183,2190],"[chatContainer, chatPage, chatingPreload, match.params.actualUser, msg, sendContainer, socket, thiss]",[3881,3883],"[match.params.actualUser, preload]",[815,817],"[chatContainer.style, sendContainer.style]",[638,640],"[initiate]"]